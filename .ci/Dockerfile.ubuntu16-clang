FROM ubuntu:16.04

# Build Directions:	
#	You can override the Ubuntu, LLVM, and CMake versions via the command line.
#	
#	Defaults:
# 		ARG UBUNTU_VERSION=16.04
#		ARG LLVM_VERSION=5.0.1
#		ARG CMAKE_VERSION=3.10	
#	
#   Example: 
#		docker build -t clang501 --build-arg LLVM_VERSION=501 ./
#	

# Run Directions:
# 	Mount your repository to /repo.
#
#	Example:
#		docker run --security-opt seccomp=unconfined -it -e LOCAL_USER=$USER -e LOCAL_USER_ID=`id -u $USER -v /home/myuser/projects/myrepo:/repo clang501
#

ARG UBUNTU_VERSION=16.04
ARG LLVM_VERSION=5.0.1
ARG CMAKE_VERSION=3.10

MAINTAINER John Farrier <jfarrier@grammatech.com>

CMD bash

# Install packages handy for development, but not the compiler itself.
RUN apt-get update && apt-get -y install \
	apt-utils \
	binfmt-support \
	build-essential \
	curl \
	doxygen \
	git \
	libffi-dev \
	libncurses-dev \
	libobjc-4.8-dev \
	libobjc4 \
	libpipeline1 \
	libpython-stdlib \
	libpython2.7-minimal \
	libpython2.7-stdlib \
	libtinfo-dev \
	python \
	python-dev \
	python-minimal \
	python2.7 \
	python2.7-minimal \
	software-properties-common \
	sudo \
	tar \
	vim \
	wget \
	xz-utils

# Install CMake
RUN curl -SL https://cmake.org/files/v$CMAKE_VERSION/cmake-$CMAKE_VERSION.0-Linux-x86_64.tar.gz \
    |tar -xz --strip-components=1 -C /usr/local

# Install the Compiler
RUN curl -SL http://releases.llvm.org/$LLVM_VERSION/clang+llvm-$LLVM_VERSION-x86_64-linux-gnu-ubuntu-$UBUNTU_VERSION.tar.xz \
    |tar -xJ --strip-components=1 -C /usr/local

COPY . /gt/gt-irb/
RUN rm -rf /gt/gt-irb/build /gt/gt-irb/CMakeCache.txt /gt/gt-irb/CMakeFiles /gt/gt-irb/CMakeScripts
RUN mkdir -p /gt/gt-irb/build
WORKDIR /gt/gt-irb/build
RUN cmake ../
RUN make -j

WORKDIR /gt/gt-irb/
ENV PATH=/gt/gt-irb/bin:$PATH
